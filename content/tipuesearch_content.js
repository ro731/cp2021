var tipuesearch = {"pages": [{'title': 'About', 'text': '這是計算機程式課程 2021 Fall 的作業倉儲與網站 template \n \n 41023103 \n 網站倉儲: https://github.com/ro731/cp2021 \xa0 \n 網站連結: https://ro731.github.io/cp2021/content/index.html \xa0 \n 其他與個人或作業相關資料說明或介紹', 'tags': '', 'url': 'About.html'}, {'title': 'GitExtensions', 'text': '下載尚未個人化設定的 GitExtensions \n 利用 GitExtensions 輸入提交訊息時, 若出現字串 highlight 表示提交字串可能不會被 Github 接受, 導致 \xa0 Github Pages 轉檔錯誤 , 網頁將無法正常連線. 修正錯誤後, 以正確的提交字串 push, 可以得到正確的 轉檔結果 . \n GitExtensions 設定: \n \n GitExtensions Git config setup: \n \n 以下將請已經完成 GitExtensions 與 SSH 結合使用的學員製作"GitExtensions 導引" Wink, 說明詳細的設定流程. \n', 'tags': '', 'url': 'GitExtensions.html'}, {'title': 'run', 'text': ' 導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n', 'tags': '', 'url': 'run.html'}, {'title': 'runsrc', 'text': '以下為上一頁 rungist 的原始碼: \n /downloads/run.txt \n', 'tags': '', 'url': 'runsrc.html'}, {'title': 'SSH', 'text': 'putty', 'tags': '', 'url': 'SSH.html'}, {'title': 'Hybrid', 'text': '將 start_ipv4.bat 與部分檔案放在 USB 隨身碟, 使用 C 槽的 Python395 與 Portablegit: \n start_ipv4.bat, data, tmp, wscite 與 home_ipv4, home_ipv6 放在隨身碟: \n @echo off\nset Disk=y\nsubst %Disk%: "data"\n \nset Local=C:\\2021_cadlab_portable\\data\n \n%Disk%:\n \nset HomePath=%Disk%:\\home_ipv4\nset HomeDrive=%Disk%:\\home_ipv4\nset Home=%Disk%:\\home_ipv4\nset USERPROFILE=%Disk%:\\home_ipv4\n \nREM 將系統 Python 程式的 io 設為 utf-8\nset PYTHONIOENCODING="utf-8"\n \nset PYTHONPATH=%Local%\\Python395\\DLLs;%Local%\\Python395\\Lib;%Local%\\Python395\\Lib\\site-packages;\n \nset PYTHONHOME=%Local%\\Python395\n \nREM 使用 putty 設定 git ssh 連線\nset GIT_SSH=%Disk%:\\putty\\plink.exe\n \nREM 設定跟 Python 有關的命令搜尋路徑\nset path_python=%Local%\\Python395;%Local%\\Python395\\Scripts;\nset path_portablegit=%Local%\\portablegit_2.31.1\\bin;\n \npath=%Disk%:;%path_python%;%path_portablegit%;%path%;\n \nREM ref: https://drive.google.com/file/d/1S0XYN-1MKxo0KFYxs0pFTcTrr8NL4n1b/view\n \nREGEDIT.EXE /S %Disk%:\\putty_github_com.reg;\n \nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\nstart /MIN cmd.exe\n \nstart /MIN %Disk%:\\wScite\\SciTE.exe\nstart /MIN %Disk%:\\wScite\\SciTE.exe\n \nExit\n \n \n', 'tags': '', 'url': 'Hybrid.html'}, {'title': 'HW1', 'text': 'HW1 - 網際動畫與 touch typing 佔學期成績 20%. \n HW1 必須在 2021.10.20 22:00 之前完成 . \n HW1 具體項目成果回報區 將於 2021.09.23 開啟, 於  2021.10.20 22:00 關閉 \n \n 請至  https://github.com  申請 Github 帳號後, 至  https://mde.tw/cp2021/content/Task1.html \xa0 頁面, 將左右碰撞移動的紅色方塊, 改為先移動到水平畫面中心點位置後, 接著上下碰撞移動. \n 請將 1. 的程式碼存入個人 Gist 區 ( 說明 ). \n 請在 1. 的程式中, 加入與  Cango 頁面  Fourbar 程式碼相同功能的啟動按鈕, 讓使用者可以利用按鈕啟動或中斷紅色方塊上下碰撞移動. 完成後請將程式碼存入個人 Gist 區. \n 請在 Gist 檔案編輯區, 利用鍵盤輸入  https://docs.github.com/en/github/writing-on-github/editing-and-sharing-content-with-gists/creating-gists#about-gists  中的這段英文內容, 請利用手機計時, 大概需要多少時間? 請將此段練習打字的內容與所需時間存入 Gist 檔案中. \n 請至少練習 key in 這段英文內容三次, 然後看看是否已經了解如何透過電腦鍵盤 touch typing? \n 接下來請利用中文輸入  https://ithelp.ithome.com.tw/articles/10206233  的第一段中文說明, 請利用手機計時, 大概需要多少時間? \n \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 - 可攜程式系統與個人網站佔學期成績 20%. \n HW2 必須在 2021.11.03 22:00 之前完成. \n HW2 具體項目成果回報區 將於 2021.10.25 開啟, 於  2021.11.03 22:00 關閉 \n 可攜程式系統與 Python 範例程式收集整理 \n 1. 請準備一個至少 64 GB 大小的 USB 3.0 以上隨身碟 (或外接 SSD), 根據  Task2  中的說明, 建立自己的可攜程式系統.\xa0 \n 2. 請登入 Github 帳號後, 連線至  https://github.com/mdecourse/cp2021_hw  後, 透過  Use this template  按鈕建立自己的 cp2021_hw 倉儲. 並至該倉儲的 Settings -> Pages -> Source 將 main 分支設為 Github Pages 的 root (也就是選擇將倉儲的 main 分支設為對應網站的根目錄). \n 3. 請將 HW1 與 HW2 的作業內容登錄至個人的 cp2021_hw 倉儲與網站中. (學習如何透過 git 指令修改倉儲中的版本內容) \n 4. 請在個人作業網站的 HW2 區域下增設一個 H2 頁面, 將該網頁標題命名為 run, 可以如  run  頁面中的內容, 並且利用此頁面收集 Python 範例程式. (例如: 可自動執行的貪食蛇:  https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/2160a12b9fec9707a120a383ed5d38b9b78a02cf/snake.py  將  https://gist.github.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439  作為  https://mde.tw/cp2021/content/run.html  頁面中 src 變數的值, 就可以在頁面中導入程式碼並執行) \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'W10', 'text': '', 'tags': '', 'url': 'W10.html'}, {'title': 'Examples', 'text': '<h2>Examples</h2>\n<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕. (本動態頁面檔案 <a href="./../downloads/Examples.txt">Examples.txt</a>)</p>\n<p>1. 從 1 累加到 100 (以下列 button 呈現).</p>\n<p>2. 教科書 (<a href="https://link.springer.com/book/10.1007/978-981-10-3277-6">Programming with Python</a>) 2.6 Exercises, 共有三個題目, 請分別將程式製作為按鈕 (button).</p>\n<p>3. 請利用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API">Canvas</a> 繪製 Fig. 3.7 的流程圖 (Flow Chart).</p>\n<p>4. 請利用 Canvas 繪製你所編寫"從 1 累加到 10"程式的流程圖 (Flow Chart).</p>\n<p>5. 請各班各組合力完成 3.5 Exercises 中的 14 個題目.</p>\n<p>6. 請各組從 4.3 Exercises 中選擇一個題目製作為頁面中的按鈕 (button).</p>\n<p>無 <a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API">Canvas</a> 繪圖需求的程式, 可放在第一區, 而採 <a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API">Canvas</a> 繪圖的程式則可放入第二區.</p>\n<p>將 Gist 中的程式導入本頁面的程式段: <a href="./../downloads/brython_button_prog.txt">brython_button_prog.txt</a>, 只要配合 button id 對應即可導入編輯區.</p>\n<p><button id="add1to100">1 add to 100</button></p>\n<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>\n<!-- 導入 brython 程式庫 -->\n<script src="./../cmsimde/static/brython.js"></script>\n<script src="./../cmsimde/static/brython_stdlib.js"></script>\n<!-- 啟動 Brython -->\n<script>// <![CDATA[\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n// ]]></script>\n<p><!-- 導入 FileSaver 與 filereader --></p>\n<p>\n<script type="text/javascript" src="./../cmsimde/static/ace/FileSaver.min.js"></script>\n<script type="text/javascript" src="./../cmsimde/static/ace/filereader.js"></script>\n</p>\n<p><!-- 導入 ace --></p>\n<p>\n<script type="text/javascript" src="./../cmsimde/static/ace/ace.js"></script>\n<script type="text/javascript" src="./../cmsimde/static/ace/ext-language_tools.js"></script>\n<script type="text/javascript" src="./../cmsimde/static/ace/mode-python3.js"></script>\n<script type="text/javascript" src="./../cmsimde/static/ace/snippets/python.js"></script>\n</p>\n<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>\n<p>\n<script type="text/javascript">// <![CDATA[\nfunction doSave(storage_id, filename){\n    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});\n    filename = document.getElementById(filename).value\n    saveAs(blob, filename+".py");\n}\n// ]]></script>\n</p>\n<!-- 內建程式 1 ####################################### 內建程式 1 開始-->\n<p>\n<script type="text/python3">// <![CDATA[\nfrom browser import document as doc\nimport ace\n# 清除畫布\ndef clear_bd1(ev):\n    bd = doc["brython_div1"]\n    bd.clear()\nAce1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )\n# 從 gist 取出程式碼後, 放入 editor 作為 default 程式\ndef run1():\n    # 利用 get 取下 src 變數值\n    try:\n        url = doc.query["src"]\n    except:\n        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"\n    prog = open(url).read()\n\n    # 將程式載入編輯區\n    Ace1.editor.setValue(prog)\n    Ace1.editor.scrollToRow(0)\n    Ace1.editor.gotoLine(0)\n    # 直接執行程式\n    #ns = {\'__name__\':\'__main__\'}\n    #exec(prog, ns)\n    # 按下 run 按鈕\n    Ace1.run()\n\n# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定\ndoc[\'kw_run1\'].bind(\'click\', Ace1.run)\ndoc[\'kw_show_console1\'].bind(\'click\', Ace1.show_console)\ndoc[\'kw_clear_console1\'].bind(\'click\', Ace1.clear_console)\ndoc[\'clear_bd1\'].bind(\'click\', clear_bd1)\n# 呼叫函式執行\nrun1()\n// ]]></script>\n</p>\n<!-- 內建程式 1 ####################################### 內建程式 1 結束-->\n<p></p>\n<!-- button 程式 1 ####################################### button 程式 1 開始-->\n<p><!-- add 1 to 100 開始 -->\n<script type="text/python3">// <![CDATA[\nfrom browser import document as doc\nimport ace\n\n# 清除畫布\ndef clear_bd1(ev):\n    bd = doc["brython_div1"]\n    bd.clear()\n\n# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件\nAce2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )\n\nadd1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"\n\n# 從 gist 取得程式碼\nadd_src = open(add1to100_url).read()\ndef add(ev):\n    Ace2.editor.setValue(add_src)\n    Ace2.editor.scrollToRow(0)\n    Ace2.editor.gotoLine(0)\n    Ace2.run()\n# id 為 "add1to100" 的按鈕點按時, 執行 add 方法\ndoc["add1to100"].bind(\'click\', add)\n// ]]></script>\n</p>\n<p><!-- add 1 to 100 結束--></p>\n<!-- editor1 開始 -->\n<p><!-- 用來顯示程式碼的 editor 區域 --></p>\n<div id="kw_editor1" style="width: 600px; height: 300px;"></div>\n<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>\n<p><!-- 存擋表單開始 --></p>\n<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text">.py</label> <input onclick="doSave(\'kw_py_src1\', \'kw_filename1\');" type="submit" value="Save"></form>\n<p><!-- 存擋表單結束 --></p>\n<p></p>\n<p><!-- 執行與清除按鈕開始 --></p>\n<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>\n<p><!-- 執行與清除按鈕結束 --></p>\n<p></p>\n<p><!-- 程式執行 ouput 區 --></p>\n<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>\n<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>\n<div id="brython_div1"></div>\n<!-- editor1 結束 --><hr><!-- button 程式 1 ####################################### button 程式 1 結束-->\n<p></p>\n<!-- button 程式 2 ####################################### button 程式 2 開始-->\n<p>第二編輯區程式 (<a href="https://gist.github.com/mdecourse/fd325f7ff3fb71a9653bf156fe53d7dc">編輯</a> Snake 原始碼):</p>\n<p><button id="check_input">查驗輸入字串</button><button id="do_snake">Snake</button></p>\n<p><!-- 判斷輸入字串是否aA1$, 且至少 8 個字元-開始 -->\n<script type="text/python3">// <![CDATA[\nfrom browser import document as doc\nimport ace\n\n# 清除畫布\ndef clear_bd2(ev):\n    bd = doc["brython_div2"]\n    bd.clear()\n\n# 利用 ace 中的 Editor 建立 Ace 物件, 其中的輸入變數分別對應到頁面中的編輯區物件\nAce3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )\n\ncheck_str_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/56dc6a6b8eaa05b80994ac6f08ebc9326330be43/check_str_input_content_1.py"\n# 從 gist 取得程式碼\ncheck_src = open(check_str_url).read()\n\ndef check_input(ev):\n    Ace3.editor.setValue(check_src)\n    Ace3.editor.scrollToRow(0)\n    Ace3.editor.gotoLine(0)\n    #Ace.run()\n\n# id 為 "check_input" 的按鈕點按時, 執行 check_input 方法\ndoc["check_input"].bind(\'click\', check_input)\n\n############ for snake 開始 ############\n\n# 設定與 gist URL 對應的變數\nsnake_url = "https://gist.githubusercontent.com/mdecourse/fd325f7ff3fb71a9653bf156fe53d7dc/raw/1bd9880ddd3978cb2b9af9a23954f9f8c2588541/brython_snake.py"\n# 根據程式碼所在的 URL 從 gist 取得程式碼\nsnake_src = open(snake_url).read()\n\n# 設計一個函式, 透過網頁的事件導向驅動方式, \n# 以 button 點擊後將 gist 原始碼導入編輯區(可令其自動執行)\ndef do_snake(ev):\n    # 將程式碼導入編輯區, Ace3 將決定放入的編輯區域\n    Ace3.editor.setValue(snake_src)\n    # 程式碼導入後, 滑鼠停在第一行\n    Ace3.editor.scrollToRow(0)\n    Ace3.editor.gotoLine(0)\n    # 取得程式碼後若帶有下一行表示希望即刻執行\n    Ace3.run()\n\n# id 為 "do_snake" 的按鈕點按時, 執行 do_snake 方法\ndoc["do_snake"].bind(\'click\', do_snake)\n############ for snake 結束 ############\n\n# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定 - 第二編輯區 Ace3 共用\ndoc[\'kw_run2\'].bind(\'click\', Ace3.run)\ndoc[\'kw_show_console2\'].bind(\'click\', Ace3.show_console)\ndoc[\'kw_clear_console2\'].bind(\'click\', Ace3.clear_console)\ndoc[\'clear_bd2\'].bind(\'click\', clear_bd2)\n# 呼叫函式執行\ncheck_input()\n// ]]></script>\n</p>\n<p><!-- 判斷輸入字串是否aA1$, 且至少 8 個字元-結束--></p>\n<!-- editor2 開始 -->\n<p><!-- 用來顯示程式碼的 editor 區域 --></p>\n<div id="kw_editor2" style="width: 600px; height: 300px;"></div>\n<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>\n<p><!-- 存擋表單開始 --></p>\n<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text">.py</label> <input onclick="doSave(\'kw_py_src2\', \'kw_filename2\');" type="submit" value="Save"></form>\n<p><!-- 存擋表單結束 --></p>\n<p></p>\n<p><!-- 執行與清除按鈕開始 --></p>\n<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>\n<p><!-- 執行與清除按鈕結束 --></p>\n<p></p>\n<p><!-- 程式執行 ouput 區 --></p>\n<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>\n<p><!-- Brython 程式執行的結果, 都以 brython_div 作為切入位置 --></p>\n<div id="brython_div2"></div>\n<!-- editor2 結束 -->\n<p></p>\n<!-- button 程式 2 ####################################### button 程式 2  結束-->\n<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->\n<script src="https://mde.tw/cp2021/cmsimde/static/Cango-24v03-min.js"></script>\n<script src="https://mde.tw/cp2021/cmsimde/static/gearUtils-09.js"></script>\n<script src="https://mde.tw/cp2021/cmsimde/static/SVGpathUtils-6v03-min.js"></script>\n<script src="https://mde.tw/cp2021/cmsimde/static/sylvester.js"></script>\n<script src="https://mde.tw/cp2021/cmsimde/static/PrairieDraw.js"></script>\n</p>\n<h4>References:</h4>\n<p style="padding-left: 30px;"><a href="https://zerojudge.tw/">https://zerojudge.tw/</a></p>\n<p style="padding-left: 30px;"><a href="https://shaform.com/csdream/docs/problem-solving/">https://shaform.com/csdream/docs/problem-solving/</a></p>\n<p style="padding-left: 30px;"><a href="https://onlinejudge.org/">https://onlinejudge.org/</a></p>\n<p style="padding-left: 30px;"></p> \n', 'tags': '', 'url': 'Examples.html'}, {'title': 'HW3', 'text': '\n HW3 - AI 貪食蛇佔學期成績 30%. \n HW3 必須在 2021.12.22 22:00 之前完成. \n HW3 具體項目成果回報區 將於 2021.11.09 開啟, 於  2021.12.22 22:00 關閉 \n 網際貪食蛇的逆襲, 誰的 自動執行貪食蛇 能夠破紀錄? 目前直覺貪食蛇紀錄為 45 節 (除了蛇身節數外, 應該還要置入出現紅色標的物後的總完食時間). \n 手動執行貪食蛇 程式說明與整理. \n 自動執行貪食蛇 程式說明與整理. \n 自動執行貪食蛇 程式的改進. \n 參考資料: \n https://mde.tw/cp2021/content/Task3.html \n Brython snake 原始來源:  https://medium.com/swlh/sick-of-javascript-just-use-browser-python-4b9679efe08b \n https://github.com/mdecourse/snake-Q-Learning \n https://towardsdatascience.com/teaching-a-computer-how-to-play-snake-with-q-learning-93d0a316ddc0 \n https://github.com/mdecourse/SnakeQlearning \n https://medium.com/@italohdc/learnsnake-teaching-an-ai-to-play-snake-using-reinforcement-learning-q-learning-b63ac23dfdd1 \n https://towardsdatascience.com/snake-played-by-a-deep-reinforcement-learning-agent-53f2c4331d36 \n https://www.geeksforgeeks.org/ai-driven-snake-game-using-deep-q-learning/ \n https://www3.hs-albsig.de/wordpress/point2pointmotion/2020/10/09/deep-reinforcement-learning-with-the-snake-game/ \n 2016_Exploration of Reinforcement Learning to SNAKE.pdf \n train_a_snake_with_reinforceme.pdf \n https://medium.com/@hugo.sjoberg88/using-reinforcement-learning-and-q-learning-to-play-snake-28423dd49e9b \n https://github.com/mdecourse/Snake-Reinforcement-Learning \n Autonomous-Agents-in-Snake-Game-via-Deep-Reinforcement-Learning.pdf \n 延伸應用: \n \n \n \n \n https://github.com/mdecourse/snake-ai-pytorch', 'tags': '', 'url': 'HW3.html'}, {'title': 'Final Project', 'text': 'Final Project 佔學期成績 30% \n Final Project 必須在 2022.01.05 22:00 之前完成 . \n Final Project 具體項目成果回報區 將於 2021.11.09 開啟, 於  2022.01.05 22:00 關閉 \n 利用 Brython 寫一個會 令人想玩 的網際遊戲. \n 參考章節: \n \n 專題摘要 \n 資料蒐集 \n 設計動機 \n 設計方法 \n 結果與討論 \n 附錄 \n \n 參考資料: \n https://github.com/collections/web-games \n https://github.com/topics/web-game \n https://github.com/topics/browser-game \n https://github.com/leereilly/games \n https://bmsleight.github.io/brython-blocks/ \n https://github.com/mdecourse/brython-blocks', 'tags': '', 'url': 'Final Project.html'}]};